generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    username  String
    password  String
    email     String    @unique
    createdAt DateTime  @default(now())
    notes     Content[]
    links     Link[]
    Sessions  Session[]
}

enum ContentType {
    IMAGE
    AUDIO
    ARTICLE
    VIDEO
}

model Content {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    contentType ContentType @default(ARTICLE)
    link        String
    share       Boolean     @default(false)
    pinned      Boolean     @default(false)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt

    userId String? @db.ObjectId
    User   User?   @relation(fields: [userId], references: [id])

    contentTags ContentTag[] // relation to join model
}

model Tag {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    title     String   @unique
    createdAt DateTime @default(now())

    contentTags ContentTag[] // relation to join model
}

model ContentTag {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    content   Content @relation(fields: [contentId], references: [id])
    contentId String  @db.ObjectId

    tag   Tag    @relation(fields: [tagId], references: [id])
    tagId String @db.ObjectId

    createdAt DateTime @default(now())
}

model Link {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    hash      String
    createdAt DateTime @default(now())

    userId String? @db.ObjectId
    User   User?   @relation(fields: [userId], references: [id])
}

model Session {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String   @db.ObjectId
    user      User     @relation(fields: [userId], references: [id])
    createdAt DateTime @default(now())
    expiresAt DateTime
}
